<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 基础配置文件 -->
	<context:property-placeholder location="classpath:config.properties"
		ignore-unresolvable="true" />

	<mvc:annotation-driven />
	<!--需要在指定类上增加注解才会被扫描进来 -->
	<context:component-scan base-package="com.jcc.mvn" />

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		init-method="createDataSource" destroy-method="close">
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
			/> -->
		<!-- <property name="url" value="jdbc:oracle:thin:@192.168.170.53:1521:powerpf" 
			/> -->
		<!-- <property name="username" value="egov_new03" /> -->
		<!-- <property name="password" value="oracle" /> -->
		<property name="driverClassName" value="${JDBC_DRIVE}" />
		<property name="url" value="${JDBC_URL}" />
		<property name="username" value="${JDBC_USER}" />
		<property name="password" value="${JDBC_PASSWORD}" />

		<property name="maxActive" value="100" />
		<!-- <property name="initialSize" value="20" /> -->
		<property name="maxWait" value="60000" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="6" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
	</bean>

	<!-- MyBatis连接会话 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/jcc/mvn/**/mapper/*.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name="basePackage" value="com.jcc.mvn.**.dao" />
		<!-- 使用sqlSessionFactory属性传入会影响${}符号加载 换成 sqlSessionFactoryBeanName -->
<!-- 		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<!-- 第一种方式：需要使用@Transactional 注解 -->
	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />
	
	<!-- 第二种方式：使用切面 -->
	<!-- <aop:config> -->
	<!-- <aop:advisor advice-ref="defaultTxAdvice"/> -->
	<!-- <aop:aspect> -->
	<!-- <aop:pointcut expression="execution(* com.jcc.mvn.*.*.*(..))" id="defaultServiceOperation" 
		/> -->
	<!-- </aop:aspect> -->
	<!-- </aop:config> -->
	<!-- <tx:advice id="defaultTxAdvice" transaction-manager="transactionManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="query*" read-only="true"/> -->
	<!-- <tx:method name="*" rollback-for="Exception"/> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->
</beans>
